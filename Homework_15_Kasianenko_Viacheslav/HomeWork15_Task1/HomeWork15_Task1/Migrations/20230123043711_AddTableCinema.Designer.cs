// <auto-generated />
using System;
using HomeWork15_Task1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeWork15Task1.Migrations
{
    [DbContext(typeof(NetworkCinemaHallsContext))]
    [Migration("20230123043711_AddTableCinema")]
    partial class AddTableCinema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeWork15_Task1.Model.Bookings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("GuidClient")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GuidPlaceCinemaHall")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GuidShowTimes")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GuidClient");

                    b.HasIndex("GuidPlaceCinemaHall");

                    b.HasIndex("GuidShowTimes");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.CinemaHalls", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GuidCinema")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GuidCinema");

                    b.ToTable("CinemaHalls");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Cinemas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Films", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("FilmName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FilmYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.PlacesCinemaHall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("GuidCinemaHall")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("NumberPlace")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuidCinemaHall");

                    b.ToTable("PlacesCinemaHalls");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Showtimes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("GuidCinemaHall")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GuidFilm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PriceShowTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ShowTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GuidCinemaHall");

                    b.HasIndex("GuidFilm");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Bookings", b =>
                {
                    b.HasOne("HomeWork15_Task1.Model.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("GuidClient");

                    b.HasOne("HomeWork15_Task1.Model.PlacesCinemaHall", "PlacesCinemaHall")
                        .WithMany("Bookings")
                        .HasForeignKey("GuidPlaceCinemaHall");

                    b.HasOne("HomeWork15_Task1.Model.Showtimes", "Showtimes")
                        .WithMany("Bookings")
                        .HasForeignKey("GuidShowTimes");

                    b.Navigation("Client");

                    b.Navigation("PlacesCinemaHall");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.CinemaHalls", b =>
                {
                    b.HasOne("HomeWork15_Task1.Model.Cinemas", "Cinema")
                        .WithMany("CinemaHalls")
                        .HasForeignKey("GuidCinema");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.PlacesCinemaHall", b =>
                {
                    b.HasOne("HomeWork15_Task1.Model.CinemaHalls", "CinemaHalls")
                        .WithMany("PlacesCinemaHall")
                        .HasForeignKey("GuidCinemaHall");

                    b.Navigation("CinemaHalls");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Showtimes", b =>
                {
                    b.HasOne("HomeWork15_Task1.Model.CinemaHalls", "CinemaHall")
                        .WithMany("Showtimes")
                        .HasForeignKey("GuidCinemaHall");

                    b.HasOne("HomeWork15_Task1.Model.Films", "Film")
                        .WithMany("Showtimes")
                        .HasForeignKey("GuidFilm");

                    b.Navigation("CinemaHall");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.CinemaHalls", b =>
                {
                    b.Navigation("PlacesCinemaHall");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Cinemas", b =>
                {
                    b.Navigation("CinemaHalls");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Films", b =>
                {
                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.PlacesCinemaHall", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("HomeWork15_Task1.Model.Showtimes", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
